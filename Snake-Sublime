<!DOCTYPE html>
<html>
	<head>
		<title>WebGL/Three.js</title>
		<script src="three.min.js"></script>
		
	</head>
	<body>
		<h1>Snake</h1>
		<canvas id="3d"></canvas>
        <div class="separateur"></div>
        <div id="nombreDeTours"></div>
        <div id="positionTete"></div>
        <div id="positionBouffe"></div>
        <div>Appuyer sur - ou + pour varier la vitesse</div>
        <div id="vitesseJeu"></div>
        <div class="separateur"></div>
		<script>
            var niveau = 0;
			var coteZone 	= 200;
			var distanceZ 	= 0;
			var distanceY 	= 0;
			var distanceX 	= 0;
			var tailleEcaille 	= 20;
			var tailleBouffe 	= 20;
			var nbMesh		= 3;
			var nbAnimates	= 0;
			var vitesseJeu 	= 200;
			var nbBouffeMangee	= 0;
			var intervallePop = 100;

			var scene = new THREE.Scene();

			var textureEcaille = THREE.ImageUtils.loadTexture('snake-skin-texture.jpg');
			var textureBouffe = THREE.ImageUtils.loadTexture('apple-texture.jpg');
            var textureTete = THREE.ImageUtils.loadTexture('snakeTete.png');

			var mesh1 = new THREE.Mesh(
				new THREE.CubeGeometry(
					tailleEcaille,tailleEcaille,tailleEcaille
				),
				new THREE.MeshBasicMaterial(
					{ map: textureEcaille/*color:0x0c3707/*vert*/, wireframe: false /*tout ceci est du JSON*/}
				)
			);
			scene.add(mesh1);

			var mesh2 = new THREE.Mesh(
				new THREE.CubeGeometry(
					tailleEcaille,tailleEcaille,tailleEcaille
				),
				new THREE.MeshBasicMaterial(
					{ map: textureEcaille/*color:0x0c3707*/, wireframe: false }
				)
			);
			mesh2.position.z += tailleEcaille;
			scene.add(mesh2);

			var mesh3 = new THREE.Mesh(
				new THREE.CubeGeometry(
					tailleEcaille,tailleEcaille,tailleEcaille
				),
				new THREE.MeshBasicMaterial(
					{ map: textureEcaille /*color:0x0c3707*/, wireframe: false }
				)
			);
			mesh3.position.z += tailleEcaille*2;
			scene.add(mesh3);

			var zone = new THREE.Mesh(
				new THREE.CubeGeometry(
                        coteZone,coteZone,coteZone
				),
				new THREE.MeshBasicMaterial(
					{ color:0x000000, wireframe: true}
				)
			);
			scene.add(zone);

			var bouffe = new THREE.Mesh(
				new THREE.SphereGeometry(
					tailleBouffe
				),
				/*new THREE.MeshBasicMaterial(
					{ color:0xff00ff, wireframe: false }
				)*/
				new THREE.MeshLambertMaterial(
					{ map: textureBouffe /*color:0x90f030*/, wireframe: false /*tout ceci est du JSON*/}
				)
			);

			//Lights
			scene.add(new THREE.AmbientLight(0x222222));
			var lightGLobal = new THREE.PointLight(0xffffff);
			lightGLobal.position.z = 1000;
			scene.add(lightGLobal);


			//rendu
	    	var renderer = new THREE.WebGLRenderer(
	        	{canvas:document.getElementById("3d")}
	    	);
	    	var camera = new THREE.PerspectiveCamera(
	    		75 /*fov*/, 4/3 /*ratio*/, 1 /*near*/, 100000 /*far*/
	    	);
	    	//camera.position.set(750,0,1500);
            camera.position.set(187.5,0,375);
            camera.lookAt(new THREE.Vector3(0,0,0));

	    	renderer.setSize(640,480);

	    	var snake = new Array(mesh1,mesh2,mesh3);
			
			document.onkeydown = keyPress;

	    	var direction = "-z";

            document.getElementById('vitesseJeu').innerHTML = vitesseJeu;
            popBouffe();
	    	animate();
	    	var mouvement = setInterval("animate()", vitesseJeu);


	    	function animate(){
	    		nbAnimates += 1;
	    		//popTrigger(nbAnimates);
				avancerDansUneDirection(direction);
                //IA();
                collisionSnake()
                bouffeEstElleMangee(snake[0], bouffe);
				debugEtAffichage();
				//getRandomNumber()
	    		renderer.render(scene,camera);	
	    	}

	    	function keyPress(evt){
                if(!evt) evt = event;
                if (evt.keyCode == 33 /* pageUp */) {
                    if(direction != "z")
                        direction = "-z";
                }
                if (evt.keyCode == 34 /* pageDown */) {
                    if(direction != "-z")
                        direction = "z";
                }
                if (evt.keyCode == 37 /* keyLeft */) {
                    if(direction != "x")
                        direction = "-x";
                }
                if (evt.keyCode == 38 /* keyUp */) {
                    if(direction != "-y")
                        direction = "y";
                }
                if (evt.keyCode == 39 /* keyRight */) {
                    if(direction != "-x")
                        direction = "x";
                }
                if (evt.keyCode == 40 /* keyDown */) {
                    if(direction != "y")
                        direction = "-y";
                }
                if (evt.keyCode == 109 /* - */) {
                    vitesseJeu *= 2;
                    var mouvement = setInterval("animate()", vitesseJeu);
                    document.getElementById('vitesseJeu').innerHTML = vitesseJeu;
                }
                if (evt.keyCode == 107 /* + */) {
                    vitesseJeu *= 0.5;
                    var mouvement = setInterval("animate()", vitesseJeu);
                    document.getElementById('vitesseJeu').innerHTML = vitesseJeu;
                }

            }


	    	function avancerDansUneDirection(axe){
	    		var tete = snake.pop();
				var queue = snake[0];

                tete.material.map = textureTete;
                queue.material.map = textureEcaille;

                tete.position.x = queue.position.x;
				tete.position.y = queue.position.y;
				tete.position.z = queue.position.z;

				direction = axe;

				if(axe == "x"){
					tete.position.x += tailleEcaille;
					distanceX += tailleEcaille;
					if(distanceX >= (coteZone/2))
					{
						tete.position.x = -coteZone/2;
						distanceX = tete.position.x;
					}
				}
				if(axe == "-x"){
					tete.position.x -= tailleEcaille;
					distanceX -= tailleEcaille;
					if(distanceX <= ((coteZone/2)*-1))
					{
						tete.position.x = coteZone/2;
						distanceX = tete.position.x;
					}
				}
				if(axe == "y"){
					tete.position.y += tailleEcaille;
					distanceY += tailleEcaille;
					if(distanceY >= (coteZone/2))
					{
						tete.position.y = -coteZone/2;
						distanceY= tete.position.y;
					}
				}
				if(axe == "-y"){
					tete.position.y -= tailleEcaille;
					distanceY -= tailleEcaille;
					if(distanceY <= ((coteZone/2)*-1))
					{
						tete.position.y = coteZone/2;
						distanceY = tete.position.y;
					}
				}
				if(axe == "z"){
					tete.position.z += tailleEcaille;
					distanceZ += tailleEcaille;
					if(distanceZ >= (coteZone/2))
					{
						tete.position.z = -coteZone/2;
						distanceZ = tete.position.z;
					}
				}
				if(axe == "-z"){
					tete.position.z -= tailleEcaille;
					distanceZ -= tailleEcaille;
					if(distanceZ <= ((coteZone/2)*-1))
					{
						tete.position.z = coteZone/2;
						distanceZ = tete.position.z;
					}
				}

				snake.unshift(tete);
	    	}

	    	function debugEtAffichage(){
	    		document.getElementsByClassName('separateur').innerHTML = '------------------------';
                document.getElementById('nombreDeTours').innerHTML = 'Nombre d\'animations = '+nbAnimates;
                document.getElementById('positionTete').innerHTML = 'La t&ecirc;te est en position : ('+distanceX+','+distanceY+','+distanceZ+')';
                document.getElementById('positionBouffe').innerHTML = 'La pomme est en position : ('+bouffe.position.x+','+bouffe.position.y+','+bouffe.position.z+')';
	    	}

	    	function getRandomNumber(){
	    		var randomNumber = Math.floor(Math.random() * coteZone) - (coteZone/2);
				randomNumberArrondi = Math.ceil(randomNumber / tailleEcaille) *tailleEcaille;
                if(randomNumberArrondi == 100 || randomNumberArrondi == -100)
                    getRandomNumber();
				return randomNumberArrondi;
	    	}

	    	function popTrigger(temps){
	    		if(temps == intervallePop)
	    		{
	    			popBouffe();
	    			nbAnimates = 0;
	    		}
	    		
	    	}

	    	function popBouffe(){
	    		scene.remove(bouffe);

	    		var posX = getRandomNumber();
                var posY = getRandomNumber();
                var posZ = getRandomNumber();
	    		
	    		bouffe.position.x = posX;
	    		bouffe.position.y = posY;
	    		bouffe.position.z = posZ;

				scene.add(bouffe);
	    	}

	    	function bouffeEstElleMangee(tete, bouffe){
                if( tete.position.x == bouffe.position.x &&
                        tete.position.y == bouffe.position.y &&
                            tete.position.z == bouffe.position.z ){
                    if(bouffe.position.x != 0 &&
                            bouffe.position.y != 0 &&
                            bouffe.position.z != 0)
                        agrandissementSnake();
                    popBouffe();
                }
                return false;
	    	}

            function agrandissementSnake(){
                var nouvelleQueue = new THREE.Mesh(
                        new THREE.CubeGeometry(
                                tailleEcaille,tailleEcaille,tailleEcaille
                        ),
                        new THREE.MeshBasicMaterial(
                                { map: textureEcaille /*color:0x0c3707*/, wireframe: false }
                        )
                );
                snake.push(nouvelleQueue);
                scene.add(nouvelleQueue);
                /*alert('agrandis toi !!!!! Pomme = ' + bouffe.position.x + ' ' + bouffe.position.y + ' ' + bouffe.position.x
                + '; Tete = ' + snake[0].position.x + ' ' + snake[0].position.y + ' ' + snake[0].position.z);*/
            }

            function testDeCollision(ecailleATester){
                if(estEgal(snake[0].position.x, ecailleATester.position.x) &&
                        estEgal(snake[0].position.y, ecailleATester.position.y) &&
                        estEgal(snake[0].position.z, ecailleATester.position.z) )
                    return true;
                return false;
            }

            function collisionSnake(){
                for(var i = snake.length-1; i > 0; i--){
                    if(testDeCollision(snake[i]) == true){
                        alert('PERDU : mon dieu un cannibale !!!!!!!');
                        location.reload();
                    }
                    return true;
                }
            }

            function estEgal(val1, val2){
                if (val1 == val2)
                    return true;
                return false;
            }

            function IA(){
                var head = snake[0];
                if(bouffe.position.x != head.position.x){
                    avancerDansUneDirection('-x');
                }
                if(bouffe.position.y != head.position.y){
                    avancerDansUneDirection('y');
                }
                if(bouffe.position.z != head.position.z){
                    avancerDansUneDirection('-z');
                }
            }
		</script>
	</body>
</html>